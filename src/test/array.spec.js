describe('Найти минимальный элемент массива', () => {
   it('передаем массив', () => {
      expect(countMinElArray([1, 66, -656, 89, 3, 12, -99, 676, -1, 55])).to.equal(-656);
   })
});


describe('Найти максимальный элемент массива', () => {
   it('передаем массив', () => {
      expect(countMaxElArray([1, 66, -656, 89, 3, 12, -99, 676, -1, 55])).to.equal(676);
   })
});

describe('Найти индекс минимального элемента массива', () => {
   it('передаем массив', () => {
      expect(findMinIndex([1, 66, -656, 89, 3, 12, -99, 676, -1, 55])).to.equal(2);
   });
   it('передаем массив намеренно все элементы одинаковые', () => {
      expect(findMinIndex([1, 1, 1, 1, 1])).to.equal(1);
   })
});


describe('Найти индекс максимального элемента массива', () => {
   it('передаем массив', () => {
      expect(findMaxIndex([1, 66, -656, 89, 3, 12, -99, 676, -1, 55])).to.equal(7);
   });
   it('передаем массив намеренно все элементы одинаковые', () => {
      expect(findMaxIndex([1, 1, 1, 1, 1])).to.equal(1);
   })
});

describe('Сделать реверс массива', () => {
   it('передаем массив', () => {
      expect(reverseArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 0])).to.eql([0, 9, 8, 7, 6, 5, 4, 3, 2, 1]);
   });
});


describe('Посчитать количество нечетных элементов массива', () => {
   it('передаем массив', () => {
      expect(contOddEl([1, 3, 5, 7, 8])).to.equal(4);
   });
});

describe('Поменять местами первую и вторую половину массива', () => {
   it('передаем массив', () => {
      expect(doubleReverse([1, 2, 3, 4])).to.eql([2, 1, 4, 3]);
   });
});